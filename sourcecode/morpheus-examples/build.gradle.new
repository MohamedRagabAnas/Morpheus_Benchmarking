import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

description = 'Collection of examples for Cypher for Apache Spark'

dependencies {
    compile project(':morpheus-spark-cypher')
    compile project(':morpheus-testing')

    compile group: 'org.apache.logging.log4j', name: 'log4j-core',           version: ver.log4j.main
    compile group: 'org.apache.spark',         name: "spark-graphx".scala(), version: ver.spark
    compile group: 'io.netty',                 name: 'netty-all',            version: ver.netty
    compile group: 'com.h2database',           name: 'h2',                   version: ver.h2
}

task allJarEg(type: ShadowJar) {
    classifier = 'all'
    zip64 = true

    from project.sourceSets.main.output
    configurations = [project.configurations.runtime]

    dependencies {
        exclude(dependency('org.scala-lang:'))
        exclude(dependency('org.scala-lang.modules:'))
    }
    exclude "META-INF/versions/**/*"
}

jar {
    zip64 true
    archiveName = "morpheus-examples.jar"
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'Main'
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'

}

pub.full.artifacts += 'allJarEg'

tasks.test.dependsOn(":okapi-neo4j-io-testing:neo4jStart")
tasks.test.finalizedBy(":okapi-neo4j-io-testing:neo4jStop")